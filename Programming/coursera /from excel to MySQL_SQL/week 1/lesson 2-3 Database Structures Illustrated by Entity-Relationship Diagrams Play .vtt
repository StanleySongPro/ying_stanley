WEBVTT

1
00:00:04.720 --> 00:00:07.520
In this video,
we are going to examine examples of

2
00:00:07.520 --> 00:00:10.810
Diagrams that will give you a sense of
some of the more complicated organizations

3
00:00:10.810 --> 00:00:12.690
you could encounter in
the databases you work with.

4
00:00:13.700 --> 00:00:16.620
Let's jump in and start with this one.

5
00:00:16.620 --> 00:00:19.870
In this example, classroom is our entity.

6
00:00:19.870 --> 00:00:23.270
Classroom ID is an underlined
attribute in parentheses and

7
00:00:23.270 --> 00:00:25.940
has two attributes of
its own attached to it.

8
00:00:25.940 --> 00:00:27.510
What does that mean?

9
00:00:27.510 --> 00:00:30.890
If you examine the details of the diagram,
you'll see that the two attributes

10
00:00:30.890 --> 00:00:34.400
attached to classroom ID,
are building, and room number.

11
00:00:34.400 --> 00:00:35.970
Since they are not underlined,

12
00:00:35.970 --> 00:00:39.570
neither one of those attributes will
have unique values in the database.

13
00:00:39.570 --> 00:00:43.670
However, the fact that ClassroomID
is underlined in parentheses

14
00:00:43.670 --> 00:00:46.650
indicates that if you combine the values
of building and RoomNumber together,

15
00:00:46.650 --> 00:00:50.290
you will get a unique identifier or
key that will be different for

16
00:00:50.290 --> 00:00:53.260
every row in the table, or more formally,
for every entity instance.

17
00:00:54.590 --> 00:00:57.050
The diagram tells us this in two ways.

18
00:00:57.050 --> 00:01:02.450
First, ClassroomID is in parentheses,
which means it is a composite attribute.

19
00:01:02.450 --> 00:01:06.270
Composite attributes are measurements or
descriptions that have important meaning

20
00:01:06.270 --> 00:01:09.610
that can be created by combining other
attributes being tracked and saved.

21
00:01:09.610 --> 00:01:10.950
So to save space,

22
00:01:10.950 --> 00:01:13.979
composite attributes are usually not made
into their own columns in a database.

23
00:01:15.130 --> 00:01:19.240
Since ClassroomID is connected to building
and room number, we know that they must

24
00:01:19.240 --> 00:01:21.550
be the attributes you would put
together to make ClassroomID.

25
00:01:22.750 --> 00:01:26.660
The fact that ClassroomID is underlined
as well as in parentheses tells us

26
00:01:26.660 --> 00:01:30.059
that this composite attribute is critical
for identifying each unique classroom.

27
00:01:31.120 --> 00:01:34.280
The practical implications of this
are that if the classroom entity

28
00:01:34.280 --> 00:01:38.790
was made into a table and you tried to
combine or join another table with it,

29
00:01:38.790 --> 00:01:41.980
your join would only work if
you use both the building and

30
00:01:41.980 --> 00:01:45.090
room number attributes to make
unique key or identifier.

31
00:01:45.090 --> 00:01:48.960
Using one attribute alone wouldn't work
and if it did work, because the data base

32
00:01:48.960 --> 00:01:52.090
wasn't configured properly,
you wouldn't get the right answer.

33
00:01:53.900 --> 00:01:55.750
Let's look at another one.

34
00:01:55.750 --> 00:01:57.920
This one has some similarities
to the one we just saw.

35
00:01:57.920 --> 00:02:00.220
It has an important difference.

36
00:02:00.220 --> 00:02:02.870
In this example,
building is now an entity and

37
00:02:02.870 --> 00:02:06.120
it has a unique attribute that
can be used as a unique key.

38
00:02:06.120 --> 00:02:08.360
The unique key would be BuildingID.

39
00:02:08.360 --> 00:02:13.110
However, building is related to apartment,
which is depicted with a double rectangle

40
00:02:13.110 --> 00:02:15.500
and whose unique key would be,
well, less clear.

41
00:02:16.590 --> 00:02:18.950
Department number is underlined
with a dash line, and

42
00:02:18.950 --> 00:02:22.740
I haven't told you what that or the double
rectangle and double diamond mean yet.

43
00:02:24.060 --> 00:02:28.500
Apartment is an example of what is
called a weak entity with a partial key.

44
00:02:28.500 --> 00:02:31.870
The double rectangle indicates
that it is a weak entity.

45
00:02:31.870 --> 00:02:35.680
The dashed line underneath apartment
number means that the apartment number in

46
00:02:35.680 --> 00:02:39.170
the database on its own will
not identify an apartment.

47
00:02:39.170 --> 00:02:42.930
In other words, there are multiple
apartment number fours in the database,

48
00:02:42.930 --> 00:02:45.510
thus apartment number can
at best be a partial key.

49
00:02:46.670 --> 00:02:51.000
Nonetheless, a partial key can become
unique in it's own weak entity if,

50
00:02:51.000 --> 00:02:55.150
and only if, it is connect to
the unique key of the entity

51
00:02:55.150 --> 00:02:57.470
it is connected to with a double diamond.

52
00:02:57.470 --> 00:02:58.370
So, in this case,

53
00:02:58.370 --> 00:03:02.070
the apartment number will be unique
if it is combined with building ID,

54
00:03:02.070 --> 00:03:05.990
since building is the entity apartment is
connected to it with a double diamond.

55
00:03:05.990 --> 00:03:10.010
In other words, there's only one instance
of each apartment number in each building.

56
00:03:11.270 --> 00:03:14.480
Note that combining apartment number
with just any attribute in building

57
00:03:14.480 --> 00:03:17.950
like number of floors would not
create a unique identifier.

58
00:03:17.950 --> 00:03:20.620
You would have to combine it
specifically with BuildingID

59
00:03:20.620 --> 00:03:22.130
since that's the unique attribute.

60
00:03:22.130 --> 00:03:26.180
You would need to make sure you understood
this if you were going to extract data to

61
00:03:26.180 --> 00:03:29.590
analyze information about the apartments
such as if you wanted to examine

62
00:03:29.590 --> 00:03:31.890
electricity usage in individual units,
for example.

63
00:03:33.660 --> 00:03:34.312
Okay.
Okay,

64
00:03:34.312 --> 00:03:36.345
let's look at one slightly
more complicated example.

65
00:03:36.345 --> 00:03:39.540
Stare at it a bit and see if you can
make a guess about what's going on.

66
00:03:40.800 --> 00:03:44.540
In general, you can see that students
are taking a bunch of classes, but

67
00:03:44.540 --> 00:03:48.790
student names can't be connected directed
with class levels or ideas in this data,

68
00:03:48.790 --> 00:03:52.870
despite the fat that both student and
class have a unique attribute.

69
00:03:52.870 --> 00:03:55.940
Apparently, the only way they can be
connected is if you combine them via

70
00:03:55.940 --> 00:03:58.280
the semester the class was taken.

71
00:03:58.280 --> 00:04:01.990
What that means is that students can
take the same class multiple times.

72
00:04:01.990 --> 00:04:04.750
Probably, because they may have to
take the class again if they fail or

73
00:04:04.750 --> 00:04:06.580
do very poorly the first, or second time.

74
00:04:07.670 --> 00:04:10.050
If you wanted to analyze data
about students and class,

75
00:04:10.050 --> 00:04:14.580
you would have to combine not two tables,
but three tables to get the data you want.

76
00:04:14.580 --> 00:04:18.030
Further, since completion is a weak
entity, when you actually wrote

77
00:04:18.030 --> 00:04:22.110
the queries, you would have to make
sure specified both the partial key and

78
00:04:22.110 --> 00:04:24.860
the unique keys when you
try to join the tables.

79
00:04:24.860 --> 00:04:29.100
This is a good example of how in real life
the data we try to put in a table format

80
00:04:29.100 --> 00:04:29.800
can be complicated.

81
00:04:29.800 --> 00:04:32.900
And if you don't have a map with
your database to help you figure out

82
00:04:32.900 --> 00:04:33.450
what's going on,

83
00:04:33.450 --> 00:04:36.610
it can take quite a while to figure out
how to combine the different parts of

84
00:04:36.610 --> 00:04:39.030
the database together to correctly
give you the information you want.

85
00:04:40.090 --> 00:04:44.150
Sometimes you might have to put four or
fives together in one query, and each of

86
00:04:44.150 --> 00:04:47.000
those tables might have to be linked with
the other tables in a different way.

87
00:04:48.020 --> 00:04:51.500
This is why I want to make
sure you understand Diagrams.

88
00:04:51.500 --> 00:04:56.480
First, like I said before, reading
the Diagrams of many different databases

89
00:04:56.480 --> 00:04:59.220
will give you an idea of what types
of relationships you are likely to

90
00:04:59.220 --> 00:05:02.600
see in your databases in real life, and
it'll give you experience with some of

91
00:05:02.600 --> 00:05:06.250
the strange situations that could
cause problems in your data analysis.

92
00:05:06.250 --> 00:05:09.260
This will be particularly useful
experience to have when working with

93
00:05:09.260 --> 00:05:12.180
databases that have not been cleaned
before they've been given to you,

94
00:05:12.180 --> 00:05:14.960
such as those you might encounter
in middle sized or small companies.

95
00:05:16.010 --> 00:05:19.190
You'll also see strange database
relationships arise in big companies,

96
00:05:19.190 --> 00:05:21.880
when the databases you are working
with are not originally designed for

97
00:05:21.880 --> 00:05:23.690
the current data that are being
collected or analyzed.

98
00:05:25.170 --> 00:05:29.130
The second reason I want to make sure you
understand the Diagrams is so that if you

99
00:05:29.130 --> 00:05:32.320
do find yourself running into difficulty
getting the information you want out of

100
00:05:32.320 --> 00:05:36.270
a relational database, you will be able
to ask your database administrator for

101
00:05:36.270 --> 00:05:38.580
the Diagram of the database
to help you figure it out.

102
00:05:39.580 --> 00:05:43.630
For many people, and I hope for you,
seeing the database represented in this

103
00:05:43.630 --> 00:05:47.450
very visual way in front of your eyes can
be the best way to translate a map of

104
00:05:47.450 --> 00:05:51.050
the database into your own head,
which in turn will help you construct

105
00:05:51.050 --> 00:05:54.470
queries that work and that accurately
reflect the what you want them to.

106
00:05:54.470 --> 00:05:59.060
I have included some Diagrams with
the course materials that were donated by

107
00:05:59.060 --> 00:06:02.580
Nenad Jukic, professor of at Quinlan
School of Business at Loyola University,

108
00:06:02.580 --> 00:06:04.960
Chicago, from his own textbook.

109
00:06:04.960 --> 00:06:09.020
You are not required to complete them,
but I highly recommend that you do.

110
00:06:09.020 --> 00:06:11.720
I wanted to make sure that you at
least had the opportunity to work

111
00:06:11.720 --> 00:06:14.750
through these exercises,
because in the end

112
00:06:14.750 --> 00:06:19.110
you will be a much more powerful SQL user
if you have studied a lot of Diagrams and

113
00:06:19.110 --> 00:06:21.290
are confident you understand
the concepts they represent.